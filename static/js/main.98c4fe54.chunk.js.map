{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","this","goods","visibleGoods","ALPHABET","LENGTH","NONE","sort","a","b","length","localeCompare","reverse","console","log","getReorderedGoods","className","onClick","setState","type","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAU,GAHd,4CAME,WAAU,IAAD,OACP,EAAiCC,KAAKH,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdE,EA5CH,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUD,EACZ,EADYA,WAERI,EAAY,YAAOD,GACfE,EAA2BT,EAA3BS,SAAUC,EAAiBV,EAAjBU,OAAQC,EAASX,EAATW,KAE1B,OAAQN,GACN,KAAKK,EACHF,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UACzC,MACF,KAAKN,EACHD,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,cAAcF,MAC5C,MACF,KAAKH,EACHH,EAAY,YAAOD,GAYvB,OAPIH,GACFI,EAAaS,UAIfC,QAAQC,IAAId,EAAUD,GAEfI,EAiBSY,CAAkBnB,EAAiB,CAAEI,WAAUD,eACrDK,EAA2BT,EAA3BS,SAAUC,EAAiBV,EAAjBU,OAAQC,EAASX,EAATW,KAE1B,OACE,mCACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAM,EAAKC,SAAS,CAAElB,SAAUI,KACzCe,KAAK,SACLH,UAAS,yBAAoBhB,IAAaI,EAAW,GAAK,YAH5D,iCAQA,wBACEe,KAAK,SACLH,UAAS,4BAAuBhB,IAAaK,EAAS,GAAK,YAC3DY,QAAS,kBAAM,EAAKC,SAAS,CAAElB,SAAUK,KAH3C,4BAQA,wBACEc,KAAK,SACLH,UAAS,4BAAwBjB,EAA0B,GAAb,YAC9CkB,QAAS,kBAAM,EAAKC,UAAS,SAAApB,GAAK,MAAK,CACrCC,YAAaD,EAAMC,gBAJvB,sBAUEA,GAA2B,IAAbC,IACd,wBACEmB,KAAK,SACLH,UAAU,4BACVC,QAAS,WACP,EAAKC,SAAS,CAAElB,SAAUM,EAAMP,YAAY,KAJhD,sBAYJ,6BACE,6BACGG,EAAMkB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAAoBA,oBAzDrD,GAAyBC,aC5DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.98c4fe54.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n  const { ALPHABET, LENGTH, NONE } = SortType;\n\n  switch (sortType) {\n    case LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    case ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case NONE:\n      visibleGoods = [...goods];\n      break;\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n    const { ALPHABET, LENGTH, NONE } = SortType;\n\n    return (\n      <>\n        <div className=\"section content\">\n          <div className=\"buttons\">\n            <button\n              onClick={() => this.setState({ sortType: ALPHABET })}\n              type=\"button\"\n              className={`button is-info ${sortType === ALPHABET ? '' : 'is-light'}`}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className={`button is-success ${sortType === LENGTH ? '' : 'is-light'}`}\n              onClick={() => this.setState({ sortType: LENGTH })}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className={`button is-warning ${!isReversed ? 'is-light' : ''}`}\n              onClick={() => this.setState(state => ({\n                isReversed: !state.isReversed,\n              }))}\n            >\n              Reverse\n            </button>\n\n            {(isReversed || sortType !== 0) && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => {\n                  this.setState({ sortType: NONE, isReversed: false });\n                }}\n              >\n                Reset\n              </button>\n            )}\n          </div>\n\n          <ul>\n            <ul>\n              {goods.map(good => <li data-cy=\"Good\">{good}</li>)}\n            </ul>\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}